<!DOCTYPE html>
<html>
<head>
<title> CONTROL ROBOT CAR BY WEB</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

 
 
<style>

.menu > a:link {
    position: absolute;
    display: inline-block;
    right: 12px;
    padding: 0 6px;
    text-decoration: none;
    }
.slidecontainer {
  width: 100%;
}

.slider {
  -webkit-appearance: none;
  width: 100%;
  height: 15px;
  border-radius: 5px;
  background: #d3d3d3;
  outline: none;
  opacity: 0.7;
  -webkit-transition: .0s;
  transition: opacity .2s;
}

.slider:hover {
  opacity: 1;
}

.slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 25px;
  height: 25px;
  border-radius: 50%;
  background: #326C88;
  cursor: pointer;
}

.slider::-moz-range-thumb {
  width: 25px;
  height: 25px;
  border-radius: 50%;
  background: #326C88;
  cursor: pointer;
}

/* Rounded switch */

.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

.switch input { 
  opacity: 0;
  width: 0;
  height: 0;
}

.slider1 {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider1:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .2s;
  transition: .2s;
}

input:checked + .slider1 {
  background-color: #326C88;
}

input:focus + .slider1 {
  box-shadow: 0 0 1px #326C88;
}

input:checked + .slider1:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

.slider1.round {
  border-radius: 34px;
}

.slider1.round:before {
  border-radius: 50%;
}
/*------------------Button----------------------*/
.led{
  font-weight : bold;
}

             ul {
                list-style-type: none;
                margin: 0;
                padding: 0;
                overflow: hidden;

        
                
              }

              li {
                float: left;
        width: 50%;
        text-align: center;   
              }

      
         h2{
              text-align: center;
              color: white;
              background-color:teal;
            padding:0px;
            margin: 0px;
              
              }
            h5{
              text-align: center;
              color: white;
              background-color:teal;
            padding:0px;
            margin: 0px;
              }

/*------------------NAV-----------------------*/
body {font-family: Arial, Helvetica, sans-serif;}

.navbar {
  width: 100%;
  background-color: #555;
  overflow: auto;
}

.navbar a {
  float: left;
  padding: 12px;
  color: white;
  text-decoration: none;
  font-size: 17px;
}

.navbar a:hover {
  background-color: #000;
}

.active {
  background-color: #4CAF50;
}

@media screen and (max-width: 500px) {
  .navbar a {
    float: none;
    display: block;
  }
}

.dropdown {
  float: left;
  overflow: hidden;
}

.dropdown .dropbtn {
  font-size: 16px;  
  border: none;
  outline: none;
  color: white;
  padding: 14px 16px;
  background-color: inherit;
  font-family: inherit;
  margin: 0;
}

.navbar a:hover, .dropdown:hover .dropbtn {
  background-color: red;
}

.dropdown-content {
  display: none;
  position: absolute;
  background-color: #f9f9f9;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  z-index: 1;
}

.dropdown-content a {
  float: none;
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
  text-align: left;
}

.dropdown-content a:hover {
  background-color: #ddd;
}

.dropdown:hover .dropdown-content {
  display: block;
}






button {
  background-color: #4CAF50; /* Green */
  border: none;
  color: white;
  padding: 0px 0px;
  width:100px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  border-radius: 8px
  }
  
  button:hover {
  background-color: blue;
	
	}
input {
   text-align :center;
   width: 60px;
   height: 20px;
   font-weight: bold;
   font-size: 16px;
   }
 .com{
	font-weight: bold;
    font-size: 16px;
   }



  
 

/* -----------------------------------------*/
    * {
  padding: 0;
  margin: 0;
}

.controlBT {
    margin-top: 30px;
    margin-bottom: 30px;
    padding: auto;
    text-align: center;
    width: 50%;
    
}


.ctrBt {
    height: 100px;
    width: 150px;
    
}



table td {
  border: 1px solid;
  height: 50px; 
  

}

table {
  width: 100%;
 
}
/* --------------------------------------------*/


</style>




</head>
<body>


<div class="navbar">
      <div class="dropdown">
	
    <button class="dropbtn"style="font-size:20px"><i class="fa fa-bars"></i> Menu </button>
    <div class="dropdown-content" >
     <a class="active" href="/"><i class="fa fa-fw fa-home"></i> Home</a> 
	 <a href="/config"><i class="fa fa-fw fa-user"></i> Config</a>
      <a class="fa fa-cog" aria-hidden="true" href="/setup">  Setup</a>
	  <a class="fa fa-credit-card" aria-hidden="true" href="/fs_read"> SFLash</a>
    <a class="fa fa-credit-card" aria-hidden="true" href="/wsdata"> wsdata</a>
		
      <a class="fa fa-address-book-o" aria-hidden="true" href="/about"> About</a>
	  </div>
</div>
    <p style="color:rgb(71, 243, 255) ; margin-top: 20px;font-size: 20px;"> <i class="fa fa-fw fa-user"></i> XuankyAutomation| <span id="wifilogo"> <i class="fa fa-wifi" style="color: lime" aria-hidden="true"></i> </span>   <span id="wifirssi"> 0 </span>%</p>
</div>
<h3 style="text-align:left">CONTROL ROBOT CAR</h3>
<h4>Date: <span id="dateval"> </span> -    Time: <span id="timeval">  </span> </h4>
<br>

<!-----------------MAIN PROGRAM-------------------->
<div style="background-color:MintCream; margin-bottom:1px; padding:0px 0px 20px 0px ; text-align:center" >

  <ul>
    <li>
    <p>STATUS: <span class="led" id="robot_mode">MANUAL</span></p> 
    <label class="switch">
      <input class="Button"type="checkbox" id="button0" onchange="state_change(0)">
      <span class="slider1 round"></span>
    </label>
    </li>
    <li>
    <p>ROBOT CAR: <span class="led"id="robot_state">OFF</span></p> 
    <button id="Start" onclick="state_change(1)"> START</button>
	  <button id="Stop" onclick="state_change(2)"> STOP</button>

    </li>
  </ul>
</div>
<div>
<h5> Robot control area screen</h5>
</div>
	<br>
<hr>
     <div style="text-align: center;">
        
          <table class = "controlBT" style="float:center">
          <tr>
            <td>   </td>
            <td> <button class = "ctrBt" onclick=" state_change(3)">   FWD </button>  </td>
            <td>  </td>

            <td style=" color: white;">SPACE BETWEEN</td>

            <td>  </td>


            <td> <button  class = "ctrBt" onclick=" state_change(41)"> BWD-LEFT </button>   </td>


            <td>  </td>



          </tr>
          <tr>
            <td> <button class = "ctrBt"onclick=" state_change(5)">   LEFT </button>   </td>
            
      
            <td>   </td>
            <td><button class = "ctrBt" onclick=" state_change(6)">   RIGHT </button>    </td>

            <td></td>

            <td> <button class = "ctrBt"onclick=" state_change(51)">   FWD-LEFT </button>   </td>
            <td>   </td>
            <td><button class = "ctrBt" onclick=" state_change(61)">   FWD-RIGHT </button>    </td>

          </tr>

          <tr>
            <td>   </td>
            <td> <button class = "ctrBt" onclick=" state_change(4)">   BWD </button>   </td>
            <td>   </td>

            <td></td>

            <td> <button class = "ctrBt" onclick=" state_change(42)"  style="width: 100px; height:50px;">   SPINLEFT </button>   </td>
            <td> <button   class = "ctrBt" onclick=" state_change(43)"> BWD-RIGHT </button>   </td>
            <td> <button class = "ctrBt" onclick=" state_change(31)" style="width: 100px; height:50px;">   SPIN RIGHT </button>  </td>
            
            
        </tr>

        </table>
        
        <br>
        <div style ="width: 50%; text-align: left;">
          <i> SPEED SETTING</i><input type="range" min="1" max="255" value="0" class="slider" id="speedSlider" onchange="speedchange()">
          <p>Value:  0 to 100% : <span id="speedset"> 0 </span></p>
          CarSpeedLimit: <input type ="number" min= '0' max ="255" value="255" id="speedlimit"> <input type = "submit" value="SETMAXSPEED" onclick="setspeedlimit()" style="width: 150px;">
        </div>
        <br>
        <hr> 

      
     


      
          <table>
            <tr> 
              <td> MotorL Kmh:</td>  <td id="speedL_kmh"> 0.0 </td> <td>M DirectL: </td>  <td id="directL">0.0</td> <td>  M_CurrentL:</td>  <td id= "currentL">0.0  </td>  <td> GPS:</td>  <td id="gps"> 0.0 </td>
            </tr>
            <tr> 
              <td> MotorR Kmh:</td>  <td id="speedR_kmh"> 0.0</td> <td> M DirectR: </td>  <td id="directR"> 0.0 </td>  <td> M_CurrentR:</td>  <td id= "currentR"> 0.0 </td> <td> GPS_SpeedKmh:</td> <td id ="gpsspeed_kmh">0.0  </td>
            </tr>
            <tr> 
              <td> MotorL RPM:</td>  <td id="speedL_rpm"> 0.0</td> <td> M_POSL:</td>  <td id = "posL"> 0.0 </td>  <td>M_Volt: </td>  <td id="M_volt"> 0.0 </td> <td> GPS_Speedms:</td> <td  id = "gpsspeed_ms"> 0.0 </td>
            </tr>
            <tr> 
              <td> MotorR RPM:</td>  <td id="speedR_rpm"> 0.0</td> <td> M_POSR:</td>  <td id="posR"> 0.0 </td>  <td> CTR_Volt:</td>  <td id = Ctr_volt>0.0  </td> <td> GPS_Distance </td> <td id = "gpsdistance"> 0.0 </td>
            </tr>
            <tr> 
              <td> Temperature:</td>  <td id="temperature"> 0.0</td> <td> Humidity:</td>  <td id="humidity"> 0.0 </td>  <td> FWD_Distance:</td>  <td id ="fwd_dist" >0.0  </td> <td> AFT_Distance </td> <td id = "aft_dist"> 0.0 </td>
            </tr>
            

          </table>

          

      </div>""

  <div>
  

	<h5> ALARM AND EVENT SCREEN </h5>
	<table>
    <tr> 
      <td> MovingStatus:</td>  <td id="MoveStatus"> STOP </td> <td> L_HCurrent:</td>  <td id="LeftCurrentHigh"> NORMAL </td>  <td> R_Hcurrent:</td>  <td id = "RightCurrentHigh"> NORMAL  </td> <td> Spare </td> <td > Spare</td>
    </tr>
    <tr> 
      <td> LowVolt_Ctrl:</td>  <td id="LowVolt_Ctrl"> NORMAL </td> <td> LowVolt_Motor:</td>  <td id="LowVolt_Motor"> NORMAL </td>  <td> PS2_Remote:</td>  <td id = "PS2"> NORMAL  </td> <td> Spare </td> <td > Spare</td>
    </tr>

  </table>


</div>


<hr>
<h5> SAFETY SETTING FOR ULTRASONIC SENSOR</h5>

<div>
  <fieldset style = "width: 330px; background-color: #f5eeee;">
  <legend>SETUP SAFTY DISTANCE STOP CAR </legend>
<table class="tablesetup"> 

  <tr><td><label>ULTRASONIC SENSOR</label>  </td> 
    <td style="width: 500px;">  
     <input type="checkbox" id="fwdsens_mode" name="typecontrol">
    <label for="typecontrol" id="fwdsensor">FWD Sensor</label><br>

    <input type="checkbox" id="aftsens_mode" name="typecontrol1">
    <label for="typecontrol1"id="aftsensor">BWD Sensor </label><br>



  </td>
  <td> <input type="text" value ='1' id = "distance_safe"  style="width:150px"></td>

  <td > <p id ="fwdinterlock">FWDInterlock </p>   <p id ="bwdinterlock">BWDInterlock </p> </td>


</tr>
  <tr>
    <td> SETUP</td>  <td>     <input type="button" id="bt_set_safety_dist" onclick="set_safety_distance()" value = " SETUP" style="width: 200px;">
    </td>
  </td> <td><p  > Setting: <span id="setdist"> m </span> (m)</p> <br> <p> Red color is Disable</p></td>

  <td> <button onclick="clearinterlock()"> CLEAR INTERLOCK </button></td>

  </tr>

    

</table>

</fieldset>
</div>






<h5> Communication status </h5>
<br>
<hr>
<div>

    <p>WEBSOCKET STATUS :  <span id="WSstatus"  style = "color: red;"> DISCONNECTED <span></p> 
    <label> WS Server address: </label>
    <input id = "ip" type="text"  placeholder="http://192.168.1.8" readonly style=" width:20% "> </input>
    <br> <br>
    
    <p> MQTT STATUS : <span id = "mqttstatus"  style = "color: red;"> DISCONNECTED</span></p>
</div>
<br>
<label> DATA RECEIVE FROM CONTROLLER</label>
<textarea id="response" style="width: 100%;"> test </textarea>

<div>

<hr> </hr>












<footer style ="text-align : center; color: blue"> CopyRight:phamxuanky82@gmail.com; <br>Zalo: 0985510900 ;Date:24/11/2024 </footer>


<p id="demo"> test </p>
<p id="demo1" style="visibility: hidden"> test </p>

 
</div>



<script>


// Global Variable
	var speedseting =document.getElementById("speedSlider");
	
    var state=0;  // Value 0 Man, Val 1 Auto
    var AutoButton = document.getElementById("button0");
    var AutoMan = document.getElementById("robot_mode");
    var mode = "manual";

    var myVar2 = setInterval(updateTime, 1000); 
    window.onload = getdata();

  

    function speedchange(){
    var a = document.getElementById("speedSlider")
    document.getElementById("speedset").innerHTML = a.value;


      //if (document.getElementById("button0").checked){ // Mode = auto 

        var jsonsend = {"speed": parseInt(a.value)}
          Sent = JSON.stringify(jsonsend); //String
          document.getElementById("demo").innerHTML = Sent;
        // Send Data over websocket
          connection.send(Sent); 

      //}



  }
//-------------------------------------------
  
       function updateTime() 
    {  
       var d = new Date();
       var t = "";
       var dayval =d.toLocaleDateString();
       var date =d.toDateString();
       t = d.toLocaleTimeString();
       
       document.getElementById('dateval').innerHTML = date;
       document.getElementById('timeval').innerHTML = t;
    }


// Sigle button change status--------------------------------------------------------------------
function state_change(i) {


  if (i==0){


    if (AutoButton.checked){
      AutoMan.innerHTML = "AUTO";
      AutoMan.style.color ="green";

    var jsonsend = {"robot_mode":true}
    Sent = JSON.stringify(jsonsend); //String
    document.getElementById("demo").innerHTML = Sent;
      
    } 
    else if (!AutoButton.checked){
      AutoMan.innerHTML = "MANUAL";
      AutoMan.style.color ="red";
        
      var jsonsend = {"robot_mode":false}
      Sent = JSON.stringify(jsonsend); //String
      document.getElementById("demo").innerHTML = Sent;
    }



}
//--------------------------------------
if (i==1){

var jsonsend = {"robot_state": true}
 Sent = JSON.stringify(jsonsend); //String
 
 document.getElementById("demo").innerHTML = Sent;
}
//------------------------------------
if (i==2){
 
 var jsonsend = {"robot_state":false}
 Sent = JSON.stringify(jsonsend); //String  ( Convert JSON OBJECT TO Json String)
 
 document.getElementById("demo").innerHTML = Sent;

}

if (i==3){
 
 var jsonsend = {"motorspeed_cmd": parseInt(speedseting.value), "direct_cmd": 1}
 
 Sent = JSON.stringify(jsonsend); //String

 document.getElementById("demo").innerHTML = Sent;
}

if (i==4){
var jsonsend = {"motorspeed_cmd": parseInt(speedseting.value), "direct_cmd": 2}
 Sent = JSON.stringify(jsonsend); //String
 document.getElementById("demo").innerHTML = Sent;
}

if (i==5){
var jsonsend = {"motorspeed_cmd": parseInt(speedseting.value), "direct_cmd": 3}
 Sent = JSON.stringify(jsonsend); //String
 document.getElementById("demo").innerHTML = Sent;
}

if (i==6){
var jsonsend = {"motorspeed_cmd": parseInt(speedseting.value), "direct_cmd": 4}
 Sent = JSON.stringify(jsonsend); //String
 document.getElementById("demo").innerHTML = Sent;
}
//---------------------------------

if (i==31){  //SPIN RIGHT
 
 var jsonsend = {"motorspeed_cmd": parseInt(speedseting.value), "direct_cmd": 9}
 Sent = JSON.stringify(jsonsend); //String
 document.getElementById("demo").innerHTML = Sent;
}

if (i==41){ //BWD-LEFT
var jsonsend = {"motorspeed_cmd": parseInt(speedseting.value), "direct_cmd": 7}
 Sent = JSON.stringify(jsonsend); //String
 document.getElementById("demo").innerHTML = Sent;
} 
if (i==42){   // SPIN LEFT
var jsonsend = {"motorspeed_cmd": parseInt(speedseting.value), "direct_cmd": 10}
 Sent = JSON.stringify(jsonsend); //String
 document.getElementById("demo").innerHTML = Sent;
}
if (i==43){ //  BWD RIGHT
var jsonsend = {"motorspeed_cmd": parseInt(speedseting.value), "direct_cmd": 8}
 Sent = JSON.stringify(jsonsend); //String
 document.getElementById("demo").innerHTML = Sent;
}

if (i==51){  //FWD LEFT
var jsonsend = {"motorspeed_cmd": parseInt(speedseting.value), "direct_cmd": 6}
 Sent = JSON.stringify(jsonsend); //String
 document.getElementById("demo").innerHTML = Sent;
}

if (i==61){ // FWD-RIGHT
var jsonsend = {"motorspeed_cmd": parseInt(speedseting.value), "direct_cmd": 5}
 Sent = JSON.stringify(jsonsend); //String
 document.getElementById("demo").innerHTML = Sent;
}
// Send Data over websocket
connection.send(Sent); 
//-------------------------------    


}

//----------------------------------------




function set_safety_distance(){

  var fwdsens_mode = document.getElementById("fwdsens_mode");
  var aftsens_mode = document.getElementById("aftsens_mode");
  var distance_safe = parseFloat(document.getElementById("distance_safe").value);

var fwd_sens_val;
var aft_sens_val;
if (fwdsens_mode.checked){fwd_sens_val=true; } else{fwd_sens_val=false;}
if (aftsens_mode.checked){aft_sens_val=true; } else{aft_sens_val=false;}



 var jsonsend = {"enb_stop_fwdsensor": fwd_sens_val, "enb_stop_aftsensor": aft_sens_val, "dist_safe":distance_safe}
 Sent = JSON.stringify(jsonsend); //String
 document.getElementById("demo").innerHTML = Sent;

// Send Data over websocket
connection.send(Sent); 
}




function clearinterlock(){

 var jsonsend = {"block_move_fwd":false, "block_move_bwd": false}
 Sent = JSON.stringify(jsonsend); //String
 document.getElementById("demo").innerHTML = Sent;

// Send Data over websocket
connection.send(Sent); 

}

</script>

<script>
var connection = new WebSocket('ws://' + window.location.hostname + ':81/',['arduino']);
//var connection = new WebSocket('ws://192.168.0.101:81/', ['arduino']);
  connection.onopen = function () {  
    connection.send('Connect ' + new Date());
                            var e = document.getElementById('WSstatus');
                            e.innerHTML = 'CONNECTED !';
                            e.style.color = 'green'         
  };

  connection.onerror = function (error) {
    console.log('WebSocket Error ', error);
                            var e = document.getElementById('WSstatus');
                            e.innerHTML = 'DISCONNECTED !';
                            e.style.color = 'red'
  };

  connection.onmessage = function (e) {  
    //console.log('Server: ', e.data);
    // variable 
    var receivedata = document.getElementById('response');
    receivedata.value = e.data; // print data received

    
    var speedL_kmh = document.getElementById('speedL_kmh');
    var speedR_kmh = document.getElementById('speedR_kmh');
    var speedL_rpm = document.getElementById('speedL_rpm');
    var speedR_rpm = document.getElementById('speedR_rpm');
    var posL = document.getElementById('posL');
    var posR = document.getElementById('posR');
    var directL = document.getElementById('directL');
    var directR = document.getElementById('directR');

    var currentL = document.getElementById('currentL');
    var currentR = document.getElementById('currentR');
    var M_volt = document.getElementById('M_volt');
    var Ctr_volt = document.getElementById('Ctr_volt');


    var robot_state = document.getElementById('robot_state');
    var robot_mode = document.getElementById('robot_mode');


    var gps = document.getElementById('gps');
    var gpsdistance = document.getElementById('gpsdistance');
    var gpsspeed_kmh = document.getElementById('gpsspeed_kmh');
    var gpsspeed_ms = document.getElementById('gpsspeed_ms');
    var ip = document.getElementById('ip');

    //-----------------------
    
    
    var mqttstatus = document.getElementById('mqttstatus');
    var MoveStatus = document.getElementById('MoveStatus');
    var LowVolt_Ctrl = document.getElementById('LowVolt_Ctrl');
    var LowVolt_Motor = document.getElementById('LowVolt_Motor');
    var RightCurrentHigh = document.getElementById('RightCurrentHigh');
    var LeftCurrentHigh = document.getElementById('LeftCurrentHigh');
    var temperature = document.getElementById('temperature');
    var humidity = document.getElementById('humidity');
    var PS2_status = document.getElementById('PS2');


    var fwd_dist = document.getElementById('fwd_dist');
    var aft_dist = document.getElementById('aft_dist');
    var distance_safe = document.getElementById('setdist');

     



    var jsonObject = JSON.parse(receivedata.value);

    if ('speedL_rpm' in jsonObject) {  // package1
      speedL_kmh.innerHTML =jsonObject.speedL_kmh;
      speedR_kmh.innerHTML =jsonObject.speedR_kmh;
      speedR_rpm.innerHTML =jsonObject.speedR_rpm;
      speedL_rpm.innerHTML =jsonObject.speedL_rpm;

      posL.innerHTML =jsonObject.posL;
      posR.innerHTML =jsonObject.posR;
      
      currentL.innerHTML = jsonObject.currentL;
      currentR.innerHTML =jsonObject.currentR;
      M_volt.innerHTML =jsonObject.M_volt;
      Ctr_volt.innerHTML = jsonObject.Ctr_volt;
      directL.innerHTML = jsonObject.directL;
      directR.innerHTML =jsonObject.directR;

      if (jsonObject.robot_state ==true){
      robot_state.innerHTML = "ON";} else{robot_state.innerHTML = "OFF";}
      if (jsonObject.robot_mode ==true){
        robot_mode.innerHTML = "AUTO"; document.getElementById("button0").checked=true;} else{robot_mode.innerHTML = "MANUAL"; document.getElementById("button0").checked=false;}


        if(jsonObject.carmove==0) {MoveStatus.innerHTML ="STOP";}
        else if(jsonObject.carmove==1) {MoveStatus.innerHTML ="FORWARD";}
        else if(jsonObject.carmove==2) {MoveStatus.innerHTML ="BACKWARD";}
        else if(jsonObject.carmove==3){ MoveStatus.innerHTML ="LEFT";}
        else if(jsonObject.carmove==4) {MoveStatus.innerHTML ="RIGHT";}
        else if(jsonObject.carmove==5) {MoveStatus.innerHTML ="FWD_RIGHT";}
        else if(jsonObject.carmove==6) {MoveStatus.innerHTML ="FWD_LEFT";}
        else if(jsonObject.carmove==7) {MoveStatus.innerHTML ="BWD_LEFT";}
        else if(jsonObject.carmove==8) {MoveStatus.innerHTML ="BWD_RIGHT";}
        else if(jsonObject.carmove==9) {MoveStatus.innerHTML ="SPIN_RIGHT";}
        else if(jsonObject.carmove==10) {MoveStatus.innerHTML ="SPIN_LEFT";}

          }

    
    if ('gpslat' in jsonObject) { // package 2
        ip.value =jsonObject.IP;
        gps.innerHTML = "LAT: " + jsonObject.gpslat + " LON: " + jsonObject.gpslon;
       


      
        
        if (jsonObject.mqttstatus){ mqttstatus.innerHTML = "CONNECTED" ; mqttstatus.style.color ='green';} else{mqttstatus.innerHTML = "DISCONNECTED" ; mqttstatus.style.color ='red';}
        if (jsonObject.low_volt_ctr){LowVolt_Ctrl.style.color ="red"; LowVolt_Ctrl.innerHTML="ABNORMAL";} else {LowVolt_Ctrl.style.color ="green";LowVolt_Ctrl.innerHTML="NORMAL";}
        if (jsonObject.low_volt_motor) {LowVolt_Motor.style.color ="red"; LowVolt_Motor.innerHTML="ABNORMAL";} else {LowVolt_Motor.style.color ="green";LowVolt_Motor.innerHTML="NORMAL";}
        if (jsonObject.L_Hcurrent) {LeftCurrentHigh.style.color ="red";LeftCurrentHigh.innerHTML="ABNORMAL";} else {LeftCurrentHigh.style.color ="green";LeftCurrentHigh.innerHTML="NORMAL";}
        if (jsonObject.R_Hcurrent) {RightCurrentHigh.style.color ="red"; RightCurrentHigh.innerHTML="ABNORMAL";} else {RightCurrentHigh.style.color ="green";RightCurrentHigh.innerHTML="NORMAL";}
        
                       



    }


    if ('PS2_status' in jsonObject) {  // package 4
      if (jsonObject.PS2_status) {PS2_status.style.color ="red"; PS2_status.innerHTML="ABNORMAL";} else {PS2_status.style.color ="green";PS2_status.innerHTML="NORMAL";}

      temperature.innerHTML =jsonObject.temp;
      humidity.innerHTML =jsonObject.humi;

      fwd_dist.innerHTML =jsonObject.fwd_dist;
        if (jsonObject.fwd_dist<800){
          fwd_dist.style.color = "red";
        } else{ fwd_dist.style.color = "lime";}

      aft_dist.innerHTML =jsonObject.aft_dist;

      if (jsonObject.aft_dist<800){
          aft_dist.style.color = "red";
        } else{ aft_dist.style.color = "lime";}

      gpsdistance.innerHTML =jsonObject.gpsdistance;
      gpsspeed_kmh.innerHTML =jsonObject.gpsspeed_kmh;
      gpsspeed_ms.innerHTML = jsonObject.gpsspeed_ms;
      distance_safe.innerHTML = jsonObject.dist


      

        //----------------------------
      if (jsonObject.aft){document.getElementById("aftsensor").style.color ="green";
      }else{ document.getElementById("aftsensor").style.color ="red"}
      if (jsonObject.fwd){document.getElementById("fwdsensor").style.color ="green";
      }else{ document.getElementById("fwdsensor").style.color ="red"}


      if (jsonObject.fwdMove){document.getElementById("fwdinterlock").style.color ="green";
      }else{ document.getElementById("fwdinterlock").style.color ="red"}
      if (jsonObject.bwdMove){document.getElementById("bwdinterlock").style.color ="green";
      }else{ document.getElementById("bwdinterlock").style.color ="red"}




    }
    

  };

  function senddatatest() {
    test = {"motorspeed_cmd": 40, "direct_cmd": 1, "motor_enb_cmd" :1 } //Json Object
    myJSON = JSON.stringify(test); // String

    connection.send(myJSON);
  }





  function setspeedlimit(){
  var speedlm = document.getElementById("speedlimit").value;

  if (speedlm>255) {speedlm=255;}
  if (speedlm<0) {speedlm=0;}
  var jsonsend = {"speedlimit": parseInt(speedlm)}
Sent = JSON.stringify(jsonsend); //String
document.getElementById("demo").innerHTML = Sent;

connection.send(Sent);
// If MODE SELECTED, DATA WILL SEND BY THIS GATE WS OR MQTT
  }

</script>


</body>
</html>

