<!DOCTYPE html>
<html>
<head>
<title> Robot Data monitor</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<script src="./highcharts.js">  </script>

 
 
<style>
.menu > a:link {
    position: absolute;
    display: inline-block;
    right: 12px;
    padding: 0 6px;
    text-decoration: none;
    }
.slidecontainer {
  width: 100%;
}

.slider {
  -webkit-appearance: none;
  width: 100%;
  height: 15px;
  border-radius: 5px;
  background: #d3d3d3;
  outline: none;
  opacity: 0.7;
  -webkit-transition: .0s;
  transition: opacity .2s;
}

.slider:hover {
  opacity: 1;
}

.slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 25px;
  height: 25px;
  border-radius: 50%;
  background: #326C88;
  cursor: pointer;
}

.slider::-moz-range-thumb {
  width: 25px;
  height: 25px;
  border-radius: 50%;
  background: #326C88;
  cursor: pointer;
}

/* Rounded switch */

.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

.switch input { 
  opacity: 0;
  width: 0;
  height: 0;
}

.slider1 {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider1:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .2s;
  transition: .2s;
}

input:checked + .slider1 {
  background-color: #326C88;
}

input:focus + .slider1 {
  box-shadow: 0 0 1px #326C88;
}

input:checked + .slider1:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

.slider1.round {
  border-radius: 34px;
}

.slider1.round:before {
  border-radius: 50%;
}
/*------------------Button----------------------*/
.led{
  font-weight : bold;
}

             ul {
                list-style-type: none;
                margin: 0;
                padding: 0;
                overflow: hidden;

        
                
              }

              li {
                float: left;
        width: 50%;
        text-align: center;   
              }

      
         h2{
              text-align: center;
              color: white;
              background-color:teal;
            padding:0px;
            margin: 0px;
              
              }
            h5{
              text-align: center;
              color: white;
              background-color:teal;
            padding:0px;
            margin: 0px;
              }

/*------------------NAV-----------------------*/
body {font-family: Arial, Helvetica, sans-serif;}

.navbar {
  width: 100%;
  background-color: #555;
  overflow: auto;
 
}

.navbar a {
  float: left;
  padding: 12px;
  color: white;
  text-decoration: none;
  font-size: 17px;
}

.navbar a:hover {
  background-color: #000;
}

.active {
  background-color: #4CAF50;
}

@media screen and (max-width: 500px) {
  .navbar a {
    float: none;
    display: block;
  }
}

.dropdown {
  float: left;
  overflow: hidden;
}

.dropdown .dropbtn {
  font-size: 16px;  
  border: none;
  outline: none;
  color: white;
  padding: 14px 16px;
  background-color: inherit;
  font-family: inherit;
  margin: 0;
}

.navbar a:hover, .dropdown:hover .dropbtn {
  background-color: red;
}

.dropdown-content {
  display: none;
  position: absolute;
  background-color: #f9f9f9;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  z-index: 1;
}

.dropdown-content a {
  float: none;
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
  text-align: left;
}

.dropdown-content a:hover {
  background-color: #ddd;
}

.dropdown:hover .dropdown-content {
  display: block;
  }
  /*Progress Bar */
  .loadbar
    {
         width:50px;
         height:200px;
         background-color:#fff;
         border:1px solid #ccc;
         position:relative; 
		 left: 45%;
    }
    .bar
    {
        width:100%;
        display:block;        
        font-family:arial;
        font-size:12px; 
        background-color:#bb9319;
        color:#fff;       
        position:absolute;
        bottom:0px        
    }
  button {
  background-color: #4CAF50; /* Green */
  border: none;
  color: white;
  padding: 10px 10px;
  width:80px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  border-radius: 8px
  }
  button:hover {
  background-color: blue;
	
	}
input {
   text-align :center;
   width: 60px;
   height: 20px;
   font-weight: bold;
   font-size: 16px;
   }
 .com{
	font-weight: bold;
    font-size: 16px;
   }

   .container{
      width: 50%;
      height: 5%;
      float :left;
    }
 
</style>
</head>
<body>


<div class="navbar">
      <div class="dropdown">
	
    <button class="dropbtn"style="font-size:20px"><i class="fa fa-bars"></i> Menu </button>
    <div class="dropdown-content" >
     <a class="active" href="/"><i class="fa fa-fw fa-home"></i> Home</a> 
	 <a href="/config"><i class="fa fa-fw fa-user"></i> Config</a>
      <a class="fa fa-cog" aria-hidden="true" href="/setup">  Setup</a>
	  <a class="fa fa-credit-card" aria-hidden="true" href="/fs_read"> SFLash</a>
    <a class="fa fa-credit-card" aria-hidden="true" href="/wsdata"> wsdata</a>

      <a class="fa fa-address-book-o" aria-hidden="true" href="/about"> About</a>
	  
    </div>
</div>

<p style="color:tomato"> <i class="fa fa-fw fa-user"></i> XuankyAutomation| <span id="wifilogo"> <i class="fa fa-wifi" style="color: lime" aria-hidden="true"></i> </span>   <span id="wifirssi"> 0 </span>%</p>
</div>

<br>

<!-----------------MAIN PROGRAM-------------------->


<h3>ESP Weather Station</h3>

  <div id="chart-temperature" class="container"></div>
  <div id="chart-humidity" class="container"></div>
<br>
  <hr>
  <h3> MONITOR MOTOR LEFT AND RIGHT SPEED</h3>

  <div>
    <label for="chart1_data">Choose a data for Chart1 :</label>
      <select name="chart1_data" id="data1">
        <option value="0">Random</option>
        <option value="1">M_L_current</option>
        <option value="2">M_R_current</option>
        <option value="3">Crl_Voltage</option>
        <option value="4">M_Voltage</option>
        <option value="5">SpeedRPM_L</option>
        <option value="6">SpeedRPM_R</option>
      </select>
  
      <label for="chart2_data">Choose a data for Chart2:</label>
      <select name="chart2_data" id="data2">
        <option value="0">Random</option>
        <option value="1">M_L_current</option>
        <option value="2">M_R_current</option>
        <option value="3">Crl_Voltage</option>
        <option value="4">M_Voltage</option>
        <option value="5">SpeedRPM_L</option>
        <option value="6">SpeedRPM_R</option>
      </select>
      
    </div>
<br>
  <div id="chart-speedL" class="container"> 
  </div>
  

  <div id="chart-speedR" class="container"></div>





  <div>

    <p>Websocket Status:  <span id="WSstatus"> Disconnected <span></p> 
    
    <fieldset style = "width: 30%; background-color: #f5eeee;">
      <legend>SETUP PARAMETER FIELD</legend>
    <table> <tr>
    <td>SocketServer: </td><td><input style =" width:200px" id = "ip" type="text"  placeholder="192.168.0.101" readonly> </input> </td>
  </tr>
  <tr>
   <td> PORT:</td> <td><input style =" width:200px" id = "wsport" type="text"  value="81" placeholder="81" readonly> </input> </td> 
    <input id="btws" type ="button" onclick="onconnect()" value="SETUP WEBSOCKET" disabled>  </input>
  </tr>
<br> <hr>
<tr> </tr>
<tr> <td>MQTT STATUS</td >    <td id = "mqttstatus" >  DISCONNECTED </td></tr>

  </table>

  </fieldset>

  <br> <br>
    
   
    
</div>




<div>
<hr> </hr>
<footer style ="text-align : center; color: blue"> CopyRight:phamxuanky82@gmail.com; <br>Zalo: 0985510900 ;Date:24/11/2024 </footer>

<p id="demo" > test </p>
<p id="demo1" style="visibility: hidden"> test </p>
<textarea id="response" style="width: 100%;"> test </textarea>

</div>


</body>
<script>



      var speedL_kmh ;
      var speedR_kmh ;
      var speedR_rpm  ;
      var speedL_rpm ;
           
      var currentL;
      var currentR;
      var M_volt;
      var Ctr_volt;
      var temperature, humidity;








var chartT = new Highcharts.Chart({
  chart:{ renderTo : 'chart-temperature' },
  title: { text: ' Temperature' },
  series: [{
    showInLegend: false,
    data: []
  }],
  plotOptions: {
    line: { animation: true,
      dataLabels: { enabled: false }
    },
    series: { color: '#059e8a' }
  },
  xAxis: { type: 'datetime',
    dateTimeLabelFormats: { second: '%H:%M:%S' }
  },
  yAxis: {
    title: { text: 'Temperature (Celsius)' }
    //title: { text: 'Temperature (Fahrenheit)' }
  },
  credits: { enabled: false }
});


var titlechart1 ="Auto Select Chart 1", yAxis_chart1 ="Depend on Data";
var titlechart2 ="Auto Select Chart 2", yAxis_chart2 = "Depend on Data";


function getdatachart1(){
  var val = document.getElementById("data1").value;
  var datatochart;
   
  switch (val){
      case '0':
      datatochart = Math.random()*10;
      titlechart1 = " RANDOM DATA CHART TEST" 
      yAxis_chart1 = "RANDOM";
      break;

      case '1':
        datatochart = currentL;
        titlechart1 = " Motor Current LEFT" 
        yAxis_chart1 = "AMPE";
        break;
   
      case '2':
        datatochart = currentR;
        
        break;
      case '3':
        datatochart = Ctr_volt;
        
      break;

      case '4':
        datatochart = M_volt;
        
        break;

      case '5':
        datatochart = speedL_rpm;
        
      break;

      case '6':
        datatochart = speedR_rpm;
        
        break;
  }
  return datatochart;
}
 
  function getdatachart2(){
  var val = document.getElementById("data2").value;
  var datatochart;
   
  switch (val){
      case '0':
      datatochart = Math.random()*10;
      break;

      case '1':
        datatochart = currentL;
        break;
   
      case '2':
        datatochart = currentR;
        break;
      case '3':
        datatochart = Ctr_volt;
      break;

      case '4':
        datatochart = M_volt;
        break;

      case '5':
        datatochart = speedL_rpm;
      break;

      case '6':
        datatochart = speedR_rpm;
        break;
  }


  //document.getElementById("demo").innerHTML =datatochart;
  return datatochart;
}





setInterval(function ( ) {
  
      var x = (new Date()).getTime();
          var y = temperature; //getdata() ;
      
      if(chartT.series[0].data.length > 40) {
        chartT.series[0].addPoint([x, y], true, true, true);
      } else {
        chartT.series[0].addPoint([x, y], true, false, true);
      }
  
}, 1000 ) ;

var chartH = new Highcharts.Chart({
  chart:{ renderTo:'chart-humidity' },
  title: { text: ' Humidity' },
  series: [{
    showInLegend: false,
    data: []
  }],
  plotOptions: {
    line: { animation: false,
      dataLabels: { enabled: true }
    }
  },
  xAxis: {
    type: 'datetime',
    dateTimeLabelFormats: { second: '%H:%M:%S' }
  },
  yAxis: {
    title: { text: 'Humidity (%)' }
  },
  credits: { enabled: false }
});


setInterval(function ( ) {
 
      var x = (new Date()).getTime(),
          y = humidity; // getdata();
      
      if(chartH.series[0].data.length > 40) {
        chartH.series[0].addPoint([x, y], true, true, true);
      } else {
        chartH.series[0].addPoint([x, y], true, false, true);
      }
    
  
}, 1000 ) ;

//  MOTOR CHART
//------------------------------------------------------------Motor-----------
var chartSpeedL = new Highcharts.Chart({
  chart:{ renderTo:'chart-speedL' },
  title: { text: titlechart1 }, 
  series: [{
    showInLegend: false,
    data: []
  }],
  plotOptions: {
    line: { animation: false,
      dataLabels: { enabled: true }
    },
    series: { color: '#18009c' }
  },
  xAxis: {
    type: 'datetime',
    dateTimeLabelFormats: { second: '%H:%M:%S' }
  },
  yAxis: {
    title: { text: yAxis_chart1 }
  },
  credits: { enabled: false }
});
setInterval(function ( ) {
  
      var x = (new Date()).getTime(),
          y = getdatachart1();
      if(chartSpeedL.series[0].data.length > 40) {
        chartSpeedL.series[0].addPoint([x, y], true, true, true);
      } else {
        chartSpeedL.series[0].addPoint([x, y], true, false, true);
      }
   
}, 1000 ) ;







//------------------------------------------------------------Motor----------
var chartSpeedR = new Highcharts.Chart({
  chart:{ renderTo:'chart-speedR' },
  title: { text: titlechart2 },
  series: [{
    showInLegend: false,
    data: []
  }],
  plotOptions: {
    line: { animation: false,
      dataLabels: { enabled: true }
    },
    series: { color: '#18009c' }
  },
  xAxis: {
    type: 'datetime',
    dateTimeLabelFormats: { second: '%H:%M:%S' }
  },
  yAxis: {
    title: { text: yAxis_chart2 }
  },
  credits: { enabled: false }
});
setInterval(function ( ) {
  
      var x = (new Date()).getTime(),
          y = getdatachart2();
      if(chartSpeedR.series[0].data.length > 40) {
        chartSpeedR.series[0].addPoint([x, y], true, true, true);
      } else {
        chartSpeedR.series[0].addPoint([x, y], true, false, true);
      }
    
}, 1000 ) ;

//----------------------------------------------------------------------------------
</script>




<script>


var Socket;
//function onconnect(){
var server = document.getElementById("ip").value;
var port = document.getElementById("wsport").value;

//if (server!="" &&  port!=""){

Socket = new WebSocket('ws://' + window.location.hostname + ':81/');
//var Socket = new WebSocket('ws://192.168.0.101:81/');
//Socket = new WebSocket('ws://'+server +':' + port+'/');
Socket.onopen = function () {  
  Socket.send('Connect ' + new Date());
                          var e = document.getElementById('WSstatus');
                          e.innerHTML = 'Connected !';
                          e.style.color = 'blue'         
};

Socket.onerror = function (error) {
  console.log('WebSocket Error ', error);
                          var e = document.getElementById('WSstatus');
                          e.innerHTML = 'Disconnected !';
                          e.style.color = 'red'
};

Socket.onmessage = function(event) { 
  


 var receivedata = document.getElementById('response');
    receivedata.value = event.data; // print data received
    var jsonObject = JSON.parse(receivedata.value);
    if ('speedL_rpm' in jsonObject) {
      speedL_kmh =jsonObject.speedL_kmh;
      speedR_kmh =jsonObject.speedR_kmh;
      speedR_rpm  =jsonObject.speedR_rpm;
      speedL_rpm =jsonObject.speedR_rpm;
           
      currentL = jsonObject.currentL;
      currentR =jsonObject.currentR;
      M_volt=jsonObject.M_volt;
      Ctr_volt = jsonObject.Ctr_volt;
    }




      if ('gpsspeed_kmh' in jsonObject) {
        ip.value =jsonObject.IP;
        temperature =jsonObject.temp;
        humidity =jsonObject.humi;
        
        if (jsonObject.mqttstatus){ mqttstatus.innerHTML = "CONNECTED" ; mqttstatus.style.color ='green';} else{mqttstatus.innerHTML = "DISCONNECTED" ; mqttstatus.style.color ='red';}
      }


  };


//}else{alert("Please enter websocket server address and port")}
//}

</script>

</body>
</html>

